{{- $dot := . }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $dot.Values.prometheus.appname }}-service
  namespace: {{ $dot.Values.common.namespace }}
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
spec:
  selector: 
    app: {{ $dot.Values.prometheus.appname }}-server
  type: ClusterIP  
  ports:
    - port: 9090
      targetPort: 9090 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $dot.Values.prometheus.appname }}-deployment
  namespace: {{ $dot.Values.common.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $dot.Values.prometheus.appname }}-server
  template:
    metadata:
      labels:
        app: {{ $dot.Values.prometheus.appname }}-server
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          effect: "NoExecute"
          operator: "Exists"
          tolerationSeconds: 60
        - key: "node.kubernetes.io/unreachable"
          effect: "NoExecute"
          operator: "Exists"
          tolerationSeconds: 60
      containers:
        - name: {{ $dot.Values.prometheus.appname }}
          image: prom/{{ $dot.Values.prometheus.appname }}:{{ $dot.Values.prometheus.version }}
          imagePullPolicy: IfNotPresent
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--storage.tsdb.retention.time=1d"
          resources:
            limits:
              memory: 2048Mi
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
        - name: prometheus-storage-volume
          emptyDir: {}
