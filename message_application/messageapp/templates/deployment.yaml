apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-app
  namespace: {{.Values.message.namespace}}
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      name: message
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
      labels:
        name: message
    spec:
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          effect: "NoExecute"
          operator: "Exists"
          tolerationSeconds: 60
        - key: "node.kubernetes.io/unreachable"
          effect: "NoExecute"
          operator: "Exists"
          tolerationSeconds: 60
      containers:
      - name: message-service
        image: {{.Values.message.image}}:{{.Values.message.tag}}
        imagePullPolicy: {{.Values.message.imagePullPolicy}}
        env:
        - name: POSTGRES_HOST
          value: "postgres"  # Update if necessary
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: POSTGRES_PASSWORD
        ports:
        - containerPort: {{.Values.message.port}}

        # Health checks
        livenessProbe:
          httpGet:
            path: /health/live
            port: {{.Values.message.port}}
          initialDelaySeconds: 10
          periodSeconds: 5

        readinessProbe:
          httpGet:
            path: /health/ready
            port: {{.Values.message.port}}
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: var-log
          mountPath: /var/log

      # Fluentd sidecar container
      - name: fluentd
        image: fluentd:v1.16.6-1.0

        env:
        - name: FLUENTD_CONF
          value: "fluent.conf"
        ports:
        - containerPort: 24224  # Fluentd input port
        - containerPort: 24220  # Fluentd monitoring port
        volumeMounts:
        - name: var-log
          mountPath: /var/log
        - name: fluentd-config
          mountPath: /fluentd/etc
          
      volumes:
      - name: var-log
        emptyDir: {}
      - name: fluentd-config
        configMap:
          name: fluentd-config


