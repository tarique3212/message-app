apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: {{.Values.message.namespace}}
spec:
  serviceName: postgres
  replicas: {{.Values.postgres.replicas}}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5432"
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: {{.Values.postgres.image}}:{{.Values.postgres.tag}}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "sleep 10; until pg_isready -U $POSTGRES_USER -d $POSTGRES_DB; do echo 'Waiting for PostgreSQL to be ready...'; sleep 2; done; psql -U $POSTGRES_USER -d $POSTGRES_DB -f /init/init.sql || true"]
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_USER
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_DB
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: {{.Values.postgres.mountPathDb}}
            - name: init-script
              mountPath: {{.Values.postgres.mountPathTable}}
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: {{.Values.postgres.claimName}}
        - name: init-script
          configMap:
            name: {{.Values.postgres.configmap}}

